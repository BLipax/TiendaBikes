{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ptrej\\\\tienda_repuestos\\\\frontend\\\\src\\\\components\\\\PagoExitoso.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useCart } from '../context/CartContext';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PagoExitoso() {\n  _s();\n  const {\n    cart,\n    clearCart\n  } = useCart();\n  const navigate = useNavigate();\n  useEffect(() => {\n    const actualizarStockBackend = async items => {\n      try {\n        const response = await fetch('https://tiendabikes-1.onrender.com/api/productos/actualizar_stock/', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            items\n          })\n        });\n        const data = await response.json();\n        if (!response.ok) {\n          alert('Error al actualizar stock: ' + data.error);\n        }\n      } catch (error) {\n        alert('Error de red al actualizar stock');\n      }\n    };\n    if (cart.length > 0) {\n      actualizarStockBackend(cart);\n      clearCart();\n      alert('Pago exitoso! Stock actualizado.');\n      // Redirige luego de 1.5 segundos para que el usuario vea el mensaje\n      setTimeout(() => {\n        navigate('/catalogo');\n      }, 1500);\n    } else {\n      // Si por alguna razón el carrito está vacío, igual redirige\n      navigate('/catalogo');\n    }\n  }, [cart, clearCart, navigate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 20,\n      textAlign: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Gracias por tu compra!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Procesando actualizaci\\xF3n del stock...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(PagoExitoso, \"5VG15TneKCcqj8Ygn9/Rb/DiAtw=\", false, function () {\n  return [useCart, useNavigate];\n});\n_c = PagoExitoso;\nexport default PagoExitoso;\nvar _c;\n$RefreshReg$(_c, \"PagoExitoso\");","map":{"version":3,"names":["React","useEffect","useCart","useNavigate","jsxDEV","_jsxDEV","PagoExitoso","_s","cart","clearCart","navigate","actualizarStockBackend","items","response","fetch","method","headers","body","JSON","stringify","data","json","ok","alert","error","length","setTimeout","style","padding","textAlign","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ptrej/tienda_repuestos/frontend/src/components/PagoExitoso.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useCart } from '../context/CartContext';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction PagoExitoso() {\r\n  const { cart, clearCart } = useCart();\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const actualizarStockBackend = async (items) => {\r\n      try {\r\n        const response = await fetch('https://tiendabikes-1.onrender.com/api/productos/actualizar_stock/', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify({ items }),\r\n        });\r\n        const data = await response.json();\r\n        if (!response.ok) {\r\n          alert('Error al actualizar stock: ' + data.error);\r\n        }\r\n      } catch (error) {\r\n        alert('Error de red al actualizar stock');\r\n      }\r\n    };\r\n\r\n    if (cart.length > 0) {\r\n      actualizarStockBackend(cart);\r\n      clearCart();\r\n      alert('Pago exitoso! Stock actualizado.');\r\n      // Redirige luego de 1.5 segundos para que el usuario vea el mensaje\r\n      setTimeout(() => {\r\n        navigate('/catalogo');\r\n      }, 1500);\r\n    } else {\r\n      // Si por alguna razón el carrito está vacío, igual redirige\r\n      navigate('/catalogo');\r\n    }\r\n  }, [cart, clearCart, navigate]);\r\n\r\n  return (\r\n    <div style={{ padding: 20, textAlign: 'center' }}>\r\n      <h2>Gracias por tu compra!</h2>\r\n      <p>Procesando actualización del stock...</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PagoExitoso;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,OAAO,QAAQ,wBAAwB;AAChD,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM;IAAEC,IAAI;IAAEC;EAAU,CAAC,GAAGP,OAAO,CAAC,CAAC;EACrC,MAAMQ,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAE9BF,SAAS,CAAC,MAAM;IACd,MAAMU,sBAAsB,GAAG,MAAOC,KAAK,IAAK;MAC9C,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,oEAAoE,EAAE;UACjGC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YAAE,cAAc,EAAE;UAAmB,CAAC;UAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YAAEP;UAAM,CAAC;QAChC,CAAC,CAAC;QACF,MAAMQ,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;QAClC,IAAI,CAACR,QAAQ,CAACS,EAAE,EAAE;UAChBC,KAAK,CAAC,6BAA6B,GAAGH,IAAI,CAACI,KAAK,CAAC;QACnD;MACF,CAAC,CAAC,OAAOA,KAAK,EAAE;QACdD,KAAK,CAAC,kCAAkC,CAAC;MAC3C;IACF,CAAC;IAED,IAAIf,IAAI,CAACiB,MAAM,GAAG,CAAC,EAAE;MACnBd,sBAAsB,CAACH,IAAI,CAAC;MAC5BC,SAAS,CAAC,CAAC;MACXc,KAAK,CAAC,kCAAkC,CAAC;MACzC;MACAG,UAAU,CAAC,MAAM;QACfhB,QAAQ,CAAC,WAAW,CAAC;MACvB,CAAC,EAAE,IAAI,CAAC;IACV,CAAC,MAAM;MACL;MACAA,QAAQ,CAAC,WAAW,CAAC;IACvB;EACF,CAAC,EAAE,CAACF,IAAI,EAAEC,SAAS,EAAEC,QAAQ,CAAC,CAAC;EAE/B,oBACEL,OAAA;IAAKsB,KAAK,EAAE;MAAEC,OAAO,EAAE,EAAE;MAAEC,SAAS,EAAE;IAAS,CAAE;IAAAC,QAAA,gBAC/CzB,OAAA;MAAAyB,QAAA,EAAI;IAAsB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC/B7B,OAAA;MAAAyB,QAAA,EAAG;IAAqC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzC,CAAC;AAEV;AAAC3B,EAAA,CAzCQD,WAAW;EAAA,QACUJ,OAAO,EAClBC,WAAW;AAAA;AAAAgC,EAAA,GAFrB7B,WAAW;AA2CpB,eAAeA,WAAW;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}